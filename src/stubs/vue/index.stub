<template>
    <div class="overflow-hidden rounded-[10px] bg-white dark:bg-boxdark">

        <div class="mb-4">
            <input
                type="text"
                v-model="searchQuery"
                @input="handleSearch"
                placeholder="Search by name..."
                class="w-full px-4 py-2 border rounded-lg"
            >
        </div>

        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-bold">{{modelName}} List</h1>
            <router-link
                :to="{ name: 'pages.{{routeName}}.new' }"
                class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
            >
                New {{modelName}}
            </router-link>
        </div>

        <div class="max-w-full overflow-x-auto">
            <div class="min-w-[1170px]">
                <!-- table body start -->
                <div>
                    <el-container v-loading="loading" class="w-full">
                        <template v-for="item in items" :key="item.id">
                            <!-- table row item -->
                            <div
                                class="grid grid-cols-12 border-t border-[#EEEEEE] px-5 py-4 dark:border-strokedark lg:px-7.5 2xl:px-11"
                            >
                                <div class="col-span-10">
                                    {{ item.name }}
                                </div>
                                <div class="col-span-2">


                                    <el-popconfirm
                                        :confirm-button-text="$t('common.delete')"
                                        icon-color="#626AEF"
                                        :title="$t('messages.confirm_deletion')"
                                        @confirm="deleteItem(item.id)"
                                        confirm-button-type="danger"
                                    >
                                        <template #reference>
                                            <el-button class="float-right mr-2" plain type="danger" link>{{ $t('common.delete') }}</el-button>
                                        </template>
                                    </el-popconfirm>

                                    <el-button @click.prevent="edit(item.id)"
                                            class="float-right mr-2" plain type="primary" link>{{ $t('common.mark_as_read') }}</el-button>
                                </div>
                            </div>
                        </template>
                    </el-container>

                </div>
                <!-- table body end -->
            </div>
        </div>
        <Empty v-if="!loading && items.length === 0" :detail="$t('common.no_data')"></Empty>
        <div class="grid grid-cols-12 bg-[#F9FAFB] px-5 py-4 dark:bg-meta-4 lg:px-7.5 2xl:px-11">
            <el-pagination @current-change="fetchItems" :hide-on-single-page="true" background layout="prev, pager, next" :total="paginationTotal" />
        </div>

    </div>
</template>

<script>
{{axiosImport}}
import _ from 'lodash'
import Empty from "@/components/Common/Empty.vue"

export default {
    name: '{{modelName}}Index',
    data() {
        return {
            items: [],
            searchQuery: '',
            paginationTotal: 0,
            loading: false
        }
    },
    methods: {
        fetchItems() {
            var self = this
            this.loading = true
            {{axiosInstance}}.get(`/api/{{routePrefix}}/{{routePath}}`, {
                params: {
                    name: this.searchQuery
                }
            })
            .then(response => {
                self.items = response.data.data
                self.paginationTotal = response.data.meta.total
                self.loading = false
            })
            .catch((error) => {
                self.loading = false
                // console.log(error)
            })
        },
        handleSearch: _.debounce(function() {
            this.fetchItems()
        }, 300),
        deleteItem(id) {
            if (!confirm('Are you sure you want to delete this item?')) return

            {{axiosInstance}}.delete(`/api/{{routePrefix}}/{{routePath}}/${id}`)
                .then(() => {
                    this.fetchItems()
                })
        }
    },
    mounted() {
        this.fetchItems()
    }
}
</script>
