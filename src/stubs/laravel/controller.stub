<?php

namespace {{namespace}};

use App\Http\Controllers\Controller;
use App\Models\{{modelName}};
use App\Http\Resources\{{modelName}}Resource;
use Illuminate\Http\Request;
{{#if softDeletes}}
use Illuminate\Database\Eloquent\SoftDeletes;
{{/if}}

class {{modelName}}Controller extends Controller
{
    {{#if softDeletes}}
    use SoftDeletes;
    {{/if}}

    public function index(Request $request)
    {
        $query = {{modelName}}::query();

        if ($request->has('{{modelFirstColumn}}')) {
            $query->where('{{modelFirstColumn}}', 'like', '%' . $request->get('{{modelFirstColumn}}') . '%');
        }

        $items = $query->paginate(10);
        return response()->json($items);
    }

    public function show($id)
    {
        $item = {{modelName}}::findOrFail($id);
        return response()->json($item);
    }

    public function store(Request $request)
    {
        $validatedData = $request->validate([
            // Validation rules
        ]);

        $item = {{modelName}}::create($validatedData);
        return response()->json($item, 201);
    }

    public function update(Request $request, $id)
    {
        $item = {{modelName}}::findOrFail($id);
        $validatedData = $request->validate([
            // Validation rules
        ]);

        $item->{{modelFirstColumn}} = $request->get('{{modelFirstColumn}}');
        $item->save();

        return response()->json($item);
    }

    public function destroy($id)
    {
        $item = {{modelName}}::findOrFail($id);
        $item->delete();

        return response()->json(['message' => '{{modelName}} deleted successfully']);
    }

    {{#if softDeletes}}
    public function restore($id)
    {
        $item = {{modelName}}::withTrashed()->findOrFail($id);
        $item->restore();

        return response()->json(['message' => '{{modelName}} restored successfully']);
    }

    public function forceDelete($id)
    {
        $item = {{modelName}}::withTrashed()->findOrFail($id);
        $item->forceDelete();

        return response()->json(['message' => '{{modelName}} permanently deleted successfully']);
    }
    {{/if}}
}
